name: build_debian_package
run-name: ${{ github.actor }} is packaging for Debian
on: [push]
jobs:
  package:
    name: Build Debian package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install devscripts
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends devscripts debhelper build-essential openssl

      - name: Build package
        run: |
          ./script/build.sh
          cp ../openhexa_*_amd64.deb .

      - name: Keep package
        uses: actions/upload-artifact@v4
        with:
          name: debian_package_amd64
          path: openhexa_*_amd64.deb

  install:
    name: Install Debian package
    needs:
      - package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Retrieve package
        uses: actions/download-artifact@v4
        with:
          name: debian_package_amd64

      - name: Install package & Run OpenHEXA
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends gettext-base
          sudo dpkg -i openhexa_*_amd64.deb
          for expected_file in /lib/systemd/system/openhexa.service /etc/openhexa/env.conf /usr/share/openhexa/compose.yml /usr/share/openhexa/openhexa.sh; do
            [[ -r $expected_file ]] || { echo "The file ${expected_file} hasn't been installed"; exit 1;}
          done
          docker ps
          [[ $ACT == "true" ]] && /usr/share/openhexa/openhexa.sh -g start
          [[ $(/usr/share/openhexa/openhexa.sh -g status) == "Running" ]] || { echo "Not all 8 services are running"; /usr/share/openhexa/openhexa.sh -g ps; exit 1; }
          (( $(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/ready/) == 200 )) || { echo "The HTTP request to the frontend fails"; exit 1; }
          (( $(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/ready) == 200 )) || { echo "The HTTP request to the backend fails"; exit 1; }
          docker ps
      - name: Install dependencies
        working-directory: ./smoke-tests
        run: npm ci
      - name: Build smoke tests image
        working-directory: ./smoke-tests
        run: docker build -t openhexa/smoke-tests .
      - name: Run smoke tests
        run: docker run -t --net=host openhexa/smoke-tests http://localhost:3000/ root@openhexa.org root || echo fail