# General
###################

# Django debugging settings
DEBUG_LOGGING=false
DEBUG_TOOLBAR=false

# Encryption settings
SECRET_KEY='${SECRET_KEY}'
ENCRYPTION_KEY='${ENCRYPTION_KEY}'

# Email settings
EMAIL_HOST=
EMAIL_PORT=
EMAIL_HOST_USER=
EMAIL_USE_TLS=
EMAIL_USE_SSL=
EMAIL_USE_LOCALTIME=
EMAIL_HOST_PASSWORD=
DEFAULT_FROM_EMAIL=

# Database settings for Django
DATABASE_PORT=$DB_PORT
DATABASE_NAME=hexa-app
DATABASE_USER=hexa-app
DATABASE_PASSWORD=hexa-app

# Networking
############

# To enable TLS/SSL directly on the app
# TLS="false"

# The hostname on which the services are published / bound
BASE_HOSTNAME=localhost
# The port number to access the backend
BASE_PORT=8000
# URL to use for the communication between pipelines, workers & the backend's API
# If not set, it falls back to BASE_HOSTNAME:BASE_PORT
INTERNAL_BASE_URL=http://app:8000

# NextJS Frontend
# If not set, it falls back to either PROXY_HOSTNAME_AND_PORT or
# BASE_HOSTNAME:FRONTEND_PORT
# NEW_FRONTEND_DOMAIN=http://localhost:3000

# Maximum request body size when uploading files to the backend (in local hosting, the backend is proxied by the frontend)
MAX_REQUEST_BODY_SIZE=5gb

# Jupyter Hub
# If not set, it falls back to either PROXY_HOSTNAME_AND_PORT or
# BASE_HOSTNAME:JUPYTERHUB_PORT
# NOTEBOOKS_URL=http://localhost:8001

# The port number to access the frontend
FRONTEND_PORT=3000
# The port number to access the Jupyter hub
JUPYTERHUB_PORT=8001

# if it's behind a reverse proxy
# PROXY_HOSTNAME_AND_PORT=example.com
# If TLS/SSL is set up on a reverse proxy routing to the app
# TRUST_FORWARDED_PROTO="false"

# MixPanel
##########

# mixpanel analytics
MIXPANEL_TOKEN=

# Pipelines
############

# Change this to the image of the workspace you want to use by default
DEFAULT_WORKSPACE_IMAGE=blsq/openhexa-base-environment:latest

# We support two spawner: docker and kubernetes. When deployed on a single
# machine, docker is the right spawner. In that case, do not change without
# good reasons.
PIPELINE_SCHEDULER_SPAWNER=docker

# Kubernetes resources settings (used only in kubernetes spawner mode)
# PIPELINE_DEFAULT_CONTAINER_CPU_LIMIT=2
# PIPELINE_DEFAULT_CONTAINER_MEMORY_LIMIT=4G
# PIPELINE_DEFAULT_CONTAINER_CPU_REQUEST=0.05
# PIPELINE_DEFAULT_CONTAINER_MEMORY_REQUEST=100M

# Notebooks
############

# The image to run the notebook containers
JUPYTER_IMAGE=blsq/openhexa-base-environment:1.4.5

# Encryption settings
JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
# Authentication settings
HUB_API_TOKEN=${HUB_API_TOKEN}

# Database settings for Jupyter Hub
JUPYTERHUB_DATABASE_NAME=hexa-hub
JUPYTERHUB_DATABASE_USER=hexa-hub
JUPYTERHUB_DATABASE_PASSWORD=hexa-hub

# Workspaces
#############

# Workspaces' DB settings
WORKSPACES_DATABASE_PORT=$DB_PORT
WORKSPACES_DATABASE_ROLE=hexa-app
WORKSPACES_DATABASE_DEFAULT_DB=hexa-app
WORKSPACES_DATABASE_PASSWORD=hexa-app

WORKSPACE_BUCKET_PREFIX=hexa-test-

# Workspace storage options
# --------------------------

# Local FS: Define the root location where the workspaces files will be stored
# Absolute path to the directory where the workspaces data will be stored
WORKSPACE_STORAGE_LOCATION=$WORKSPACE_STORAGE_LOCATION

## GCP: Mandatory to run with GCS
WORKSPACE_STORAGE_BACKEND_GCS_SERVICE_ACCOUNT_KEY=

# # openssl rand -hex 16
# WORKSPACE_STORAGE_ENGINE_AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
# # openssl rand -base64 42
# WORKSPACE_STORAGE_ENGINE_AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
## AWS: To run it in AWS mode or in LocalHosting mode set the variable to s3
WORKSPACE_STORAGE_BACKEND_AWS_ENDPOINT_URL=
WORKSPACE_STORAGE_BACKEND_AWS_PUBLIC_ENDPOINT_URL=
WORKSPACE_STORAGE_BACKEND_AWS_SECRET_ACCESS_KEY=
WORKSPACE_STORAGE_BACKEND_AWS_ACCESS_KEY_ID=
WORKSPACE_STORAGE_BACKEND_AWS_BUCKET_REGION=

WORKSPACE_BUCKET_REGION=

# Datasets
###########

# Bucket to store datasets for all workspaces
WORKSPACE_DATASETS_BUCKET=hexa-datasets
