version: "3.9"

# Defines a service that can be reused multiple times later
x-app: &common
    image: "blsq/openhexa-app:${BACKEND_VERSION:-latest}"
    platform: linux/amd64
    networks:
      - openhexa
    environment:
      - DEBUG=true
      - DJANGO_SETTINGS_MODULE=config.settings.dev
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=hexa-app
      - DATABASE_USER=hexa-app
      - DATABASE_PASSWORD=hexa-app
      - ACCESSMOD_BUCKET_NAME=s3://hexa-demo-accessmod
      - ACCESSMOD_MANAGE_REQUESTS_URL=http://localhost:3000/admin/access-requests
      - ACCESSMOD_SET_PASSWORD_URL=http://localhost:3000/account/set-password
      - NEW_FRONTEND_DOMAIN=localhost:3000
      - PIPELINE_SCHEDULER_SPAWNER=docker
      - PIPELINE_API_URL=http://app:8000
      - DEBUG_LOGGING=${DEBUG_LOGGING}
      - DEBUG_TOOLBAR=${DEBUG_TOOLBAR}
      - WORKSPACES_DATABASE_ROLE=hexa-app
      - WORKSPACES_DATABASE_PASSWORD=hexa-app
      - WORKSPACES_DATABASE_HOST=db
      - WORKSPACES_DATABASE_PORT=5432
      - WORKSPACES_DATABASE_DEFAULT_DB=hexa-app
      - WORKSPACES_DATABASE_PROXY_HOST=db
      - WORKSPACE_STORAGE_ENGINE_AWS_ENDPOINT_URL=http://minio:9000
      - WORKSPACE_STORAGE_ENGINE=s3
      - WORKSPACE_STORAGE_ENGINE_AWS_ACCESS_KEY_ID=${WORKSPACE_STORAGE_ENGINE_AWS_ACCESS_KEY_ID}
      - WORKSPACE_STORAGE_ENGINE_AWS_SECRET_ACCESS_KEY=${WORKSPACE_STORAGE_ENGINE_AWS_SECRET_ACCESS_KEY}
      - WORKSPACE_STORAGE_ENGINE_AWS_BUCKET_REGION=europe-west1
      - NOTEBOOKS_HUB_URL=http://jupyterhub:8000/hub
      - HUB_API_TOKEN=cbb352d6a412e266d7494fb014dd699373645ec8d353e00c7aa9dc79ca87800d
      - WORKSPACE_BUCKET_PREFIX=hexa-test-
      - WORKSPACE_BUCKET_REGION=europe-west1
      - DEFAULT_WORKSPACE_IMAGE=blsq/openhexa-base-environment

services:
  db:
    image: postgis/postgis:12-3.2
    networks:
      - openhexa
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hexa-app
      - POSTGRES_USER=hexa-app
      - POSTGRES_PASSWORD=hexa-app
    ports:
      - "${DB_PORT:-5434}:5432"

  app:
    # Inherit from the block defined on top and override some fields
    <<: *common
    command: "manage runserver 0:8000"
    restart: unless-stopped
    container_name: app
    ports:
      - "${APP_PORT:-8000}:8000"
    depends_on:
      - db
  
  frontend:
    image: "blsq/openhexa-frontend:${FRONTEND_VERSION:-main}"
    platform: linux/amd64
    networks:
      - openhexa
    container_name: frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - OPENHEXA_BACKEND_URL=http://app:8000
    profiles:
      - frontend
    restart: unless-stopped
    depends_on:
      - app

  pipelines_runner:
    <<: *common
    command: "manage pipelines_runner"
    restart: unless-stopped
    profiles:
      - "pipelines"
    depends_on:
      - db
    volumes:  # only used for Github Codespaces
      - /var/run/docker.sock:/var/run/docker.sock

  pipelines_scheduler:
    <<: *common
    build:
      context: .
      dockerfile: Dockerfile
      target: pipelines
    command: "manage pipelines_scheduler"
    restart: unless-stopped
    profiles:
      - "pipelines"
    depends_on:
      - db

  minio:
    image: quay.io/minio/minio
    command: server --address 0.0.0.0:9000 --console-address ":9001" /data
    volumes:
      - minio_data:/data
    profiles:
      - minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    networks:
      - openhexa
    environment:
      - MINIO_ROOT_USER=${WORKSPACE_STORAGE_ENGINE_AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${WORKSPACE_STORAGE_ENGINE_AWS_SECRET_ACCESS_KEY}

  jupyter:
    image: blsq/openhexa-base-environment
    platform: linux/amd64
    command: echo

  jupyterhub:
    platform: linux/amd64
    image: blsq/openhexa-jupyterhub
    command: ["jupyterhub", "-f", "/etc/jupyterhub/jupyterhub_dev_config.py"]
    container_name: jupyterhub
    networks:
      - openhexa
    depends_on:
      - db-hub
    environment:
      LOAD_DEV_CONFIG: "true"
      JUPYTER_IMAGE: blsq/openhexa-base-environment
      DOCKER_NETWORK_NAME: openhexa
      HUB_IP: jupyterhub
      HUB_DB_URL: postgresql://postgres:postgres@db-hub:5432/jupyterhub
      AUTHENTICATION_URL: http://app:8000/notebooks/authenticate/
      DEFAULT_CREDENTIALS_URL: http://app:8000/notebooks/default-credentials/
      WORKSPACE_CREDENTIALS_URL: http://app:8000/workspaces/credentials/
      LOGOUT_REDIRECT_URL: http://app:8000/
      HEXA_SERVER_URL: http://app:8000/
      CONTENT_SECURITY_POLICY: "frame-ancestors 'self' localhost:*"
      JUPYTERHUB_CRYPT_KEY: 0b9c2791baa0b19e10f1dc9c4a1a702dda0a37c332378870e9542271a365b9b8
      HUB_API_TOKEN: cbb352d6a412e266d7494fb014dd699373645ec8d353e00c7aa9dc79ca87800d
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - ${JUPYTERHUB_PORT:-8001}:8000
    restart: on-failure

  db-hub:
    image: postgres:12
    networks:
      - openhexa
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: jupyterhub

networks:
  openhexa:
    name: openhexa
volumes:
  pgdata:
  minio_data: